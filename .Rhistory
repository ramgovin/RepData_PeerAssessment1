str(dm)
dm$"5"=c("30")
clear
library(datasets)
data(iris)
?iris
iris[,iris$Species="virginica"]
iris[,iris$Species=="virginica"]
iris[iris$Species=="virginica",]
iris[iris$Species=="virginica",iris$Sepal.Length]
iris[iris$Species=="virginica",1]
mean(iris[iris$Species=="virginica",1])
apply(iris[,1:4],1, mean)
rowMeans(iris[,1:4])
apply(iris, 2, mean)
apply(iris[,1:4],2, mean)
?apply
apply(iris[1:4,],1, sum)
apply(iris[,1:4],1, sum)
iris
apply(iris[1,1:4],1, sum)
rm(list=ls())
library(datasets)
data(mtcars)
?mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
mtcars
str(mtcars)
summary(mtcars)
sapply(mtcars, cyl, mean)
mean(mtcars$mpg, mtcars$cyl)
?mean
mean(mtcars$cyl)
mean(mtcars$cyl, rm.na=TRUE)
split(mtcars, mtcars$cyl)
?mtcars
tapply(mtcars$cyl==4, mtcars$hp, mean)
tapply(mtcars$hp, mtcars$cyl==4, mean)
mean(mtcars$hp[mtcars$cyl==4])
mean(mtcars$hp[mtcars$cyl==8])
mean(mtcars$hp[mtcars$cyl==8]) - mean(mtcars$hp[mtcars$cyl==4])
abs(mean(mtcars$hp[mtcars$cyl==4]) - mean(mtcars$hp[mtcars$cyl==8]))
?abs
abs(-1)
debug(ls)
ls
ls()
name
all.names
exit
exit
quit
exit
quit
q()
set.seed(1)
rpois(5,2)
rpois(5,2)
set.seed(1)
rpois(5,2)
rpois(5,2)
rpois(5,2)
rpois(5,2)
set.seed(1)
rpois(5,2)
set.seed(1)
rpois(5,2)
rm(list=ls())
rm(list=ls())
rm(list=ls())
rpois(5,2)
rpois(5,2)
set.seed(100000)
rpois(5,2)
set.seed(10)
x<-rep(0:1, each=5)
e<-rnorm(10, 0, 20)
?rnorm
y<- 0.5+2*xe
y<- 0.5+2*x + e
draw(x,y)
plot(x,y)
?rbinom
library(datasets)
Rprof()
fit <- lm(y~x1+x2)
Rprof(NULL)
summaryRprof()
System.time()
system.time()
system.time(lm)
system.time(lm(x,y))
system.time(lm(y~x))
summaryRprof()
source(ramgovin-cachematrix.R)
source("ramgovin-cachematrix.R"")
)
;
q()
bye
bye()
;
.
!
exit
exit()
.
clear9)
clear()
quit()
.
""
source("ramgovin-cachematrix.R")
source("ramgovin-cachematrix.R")
rm(list=ls())
rm(list=ls())
rm(list=ls())
stop
q()
exit
exit()
function (name, pos = -1L, envir = as.environment(pos), all.names = FALSE,
""
q()
exit()
quit
quit()
exit
ls()
quit()
debug ls() off
debug off
debug(off)
?debug
undebug(ls())
undebug(ls)
ls()
rm(list=ls())
source("ramgovin-cachematrix.R")
tCached
t1<-matrix(runif(9,1,500),3,3)
t1Cached<-makeCacheMatrix(t1)
cacheSolve(t1Cached)
cacheSolve(t1Cached)
?unlist
?list
?as.list
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl
swirl()
install.packages("rJava")
library("rJava", lib.loc="C:/R/R-3.2.0/library")
detach("package:rJava", unload=TRUE)
install.packages("xlsxjars")
install.packages("xlsx")
library(rjava)
library(rJava)
library(rJava)
library("rJava", lib.loc="C:/R/R-3.2.0/library")
r?
q
version
library("ROracle", lib.loc="C:/R/R-3.2.0/library")
detach("package:ROracle", unload=TRUE)
R.version()
r.version()
R.Version()
library(rJava)
library("xlsxjars", lib.loc="C:/R/R-3.2.0/library")
install.packages("xlsx")
library("xlsx", lib.loc="C:/R/R-3.2.0/library")
library(rJava)
library("rJava", lib.loc="C:/R/R-3.2.0/library")
library(rJava)
library("rJava", lib.loc="C:/R/R-3.2.0/library")
detach("package:rJava", unload=TRUE)
library("rJava", lib.loc="C:/R/R-3.2.0/library")
library("rJava", lib.loc="C:/R/R-3.2.0/library")
ls
ls()
setwd("~/Data-Cleaning")
read.csv("gedata-data-ss06pid.csv")
ls
ls()
getwd()
ls()
read.csv("getdata-data-ss06pid.csv")
acs <- read.csv("getdata-data-ss06pid.csv")
columns(acs)
names(acs)
View(acs)
sqldf("select pwgtp1 from acs")
source("oauth.R")
setwd("~/")
source("oauth.R")
source("oauth.R")
package.install("httpuv")
install.packages("httpuv")
source("oauth.R")
library("httr", lib.loc="C:/R/R-3.2.0/library")
sqldf("select distinct AGEP from acs")
install.packages("sqldf")
sqldf("select distinct AGEP from acs")
load(sqldf)
load('sqldf')
library('sqldf')
sqldf("select distinct AGEP from acs")
sqldf("select pwgtp1 from acs where AGEP < 50")
source("oauth.R")
rm(list=ls())
source("oauth.R")
source("oauth.R")
source("oauth.R")
source("oauth.R")
source("oauth.R")
source("oauth.R")
source("oauth.R")
source("oauth.R")
rm(list=ls())
source("oauth.R")
source("oauth.R")
source("oauth.R")
source("oauth.R")
remove.packages("httpuv")
install.packages("httpuv")
install.packages('httpuv')
remove.packages('httpuv', 'httpuv')
remove.packages('httpuv')
library('httpuv')
install.packages('httpuv')
getwd()
dir()
source("oauth.R")
source("oauth.R")
req[4]
names(con)
names(req)
con[7]
req[7]
req[[url]]
req[1]
req[2]
req[3]
req[4]
q()
req
rm(list=ls())
source("oauth.R")
columns(req)
names(req)
library("lattice")
?xyplot()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
columns(nlme)
weight
class(Diet)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
class(airquality)
library(lattice)
library(datasets)
data(airquality)
xyplot(Ozone ~ Wind | factor(Month), data = airquality)
qplot(Wind, Ozone, data = airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
?qplot
??qplot
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
install.packages("ggplot2")
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot
qplot()
?qplot()
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
plot(p)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
head(BodyWeight)
table(BodyWeight$Diet)
BodyWeight
library('quantmod')
amba<-getSymbols("AMBA", auto.assign=FALSE)
amba
View(amba)
amba %>% mutate(strsplit("row.names", "-"))
library(dplyr)
amba %>% mutate(strsplit("row.names", "-"))
?mutate
library(plyr)
amba %>% mutate(strsplit("row.names", "-"))
amba<-data.frame(amba)
amba %>% mutate(strsplit("row.names", "-"))
strsplit(amba$row.names, "-")
?strsplit
strsplit(amba$row.names, '-')
strsplit(amba$row.names, split="-")
strsplit(amba$row.names[1], split="-")
amba$row.names[1]
amba$row.names[2]
amba$row.names
names(amba)
amba$Date<-rownames(amba)
View(amba)
strsplit(amba$Date, split="-")
amba.Date<-strsplit(amba$Date, split="-")
View(amba)
amba.Date[1]
amba.Date[1][2]
amba.Date[[1]]
amba.Date[[1,2]]
amba.Date[[1,1]]
amba.Date[[2]]
amba.Year<-strsplit(amba$Date, split="-")
View(amba)
amba$Year<-strsplit(amba$Date, split="-")
View(amba)
c("Year", "Month", "Day")<- strsplit(amba$Date, split="-")
colsplit(amba$Date, "-", c('Year', 'Month', 'Day'))
library(reshape)
colsplit(amba$Date, "-", c('Year', 'Month', 'Day'))
Date.split<-colsplit(amba$Date, "-", c('Year', 'Month', 'Day'))
rbind(amba,Date.split)
cbind(amba,Date.split)
amba1<-cbind(amba,Date.split)
names(amba1)
amba1%>% group.by(Month) %>% summarise(average(Volume), stdev(Volume), stdev(Adjusted))
amba1%>% group_by(Month) %>% summarise(average(Volume), stdev(Volume), stdev(Adjusted))
amba1%>% group_by(Month) %>% summarise(mean(Volume), stdev(Volume), stdev(Adjusted))
amba1%>% group.by(Month) %>% summarise(average(Volume), stdev(Volume), stdev(Adjusted))
amba1%>% group_by(Month) %>% summarise(mean(Volume), stdev(Volume), stdev(Adjusted))
amba1%>% group_by(Month)
amba1%>% group_by(Month) %>% summarise(mean(AMBA.Volume), stdev(AMBA.Volume), stdev(AMBA.Adjusted))
amba1%>% group_by(Month) %>% summarise(mean(AMBA.Volume), stddev(AMBA.Volume), stddev(AMBA.Adjusted))
amba1%>% group_by(Month) %>% summarise(mean(AMBA.Volume), sdev(AMBA.Volume), sdev(AMBA.Adjusted))
amba1%>% group_by(Month) %>% summarise(mean(AMBA.Volume), std(AMBA.Volume), std(AMBA.Adjusted))
?std dev
?standard deviation
amba1%>% group_by(Month) %>% summarise(mean(AMBA.Volume), sd(AMBA.Volume), sd(AMBA.Adjusted))
amba1%>% group_by(Month) %>% summarise(mean(AMBA.Volume), sd(AMBA.Volume), sd(AMBA.Adjusted))
stats<-amba1%>% group_by(Month) %>% summarise(mean(AMBA.Volume), sd(AMBA.Volume), sd(AMBA.Adjusted))
View(stats)
stats<-amba1%>% group_by(Month)
View(stats)
stats<-amba1%>% group_by(Month) %>% summarise(mean(AMBA.Volume), sd(AMBA.Volume), sd(AMBA.Adjusted))
View(stats)
stats<-amba1%>% group_by(Month) %>% summarise(mean(AMBA.Volume))
amba1%>% group_by(AMBA.Month)
amba1%>% group_by(Month)
amba1%>% group_by(Month) %>% summarise(mean(AMBA.Volume))
View(amba1)
rm(list=ls())
library(plyr)
library('quantmod')
amba<-getSymbols("AMBA", auto.assign=FALSE)
amba<-data.frame(amba)
Date.split<-colsplit(amba$Date, "-", c('Year', 'Month', 'Day'))
library(reshape)
Date.split<-colsplit(amba$Date, "-", c('Year', 'Month', 'Day'))
View(amba)
amba$Date<-row.names
amba$Date<-row.names(ama)
amba$Date<-row.names(amba)
View(amba)
Date.split<-colsplit(amba$Date, "-", c('Year', 'Month', 'Day'))
amba1<-cbind(amba,Date.split)
View(amba1)
amba1%>% group_by(Month) %>% summarise(mean(AMBA.Volume))
amba1%>% group_by(Month) %>% summarise(mean(AMBA.Volume, AMBA.High))
amba1%>% group_by(Month) %>% summarise(mean(AMBA.Volume))
amba1%>% group_by(Month) %>% summarise(sum(AMBA.Volume))
amba1%>% summarise(sum(AMBA.Volume))
amba1%>% group_by(Month) %>% summarise(mean(AMBA.Volume), mean(AMBA.Adjusted))
amba1%>% group_by(Month) %>% summarise(Month, mean(AMBA.Volume), mean(AMBA.Adjusted))
amba1%>% group_by(Month) %>% summarise(mean(AMBA.Volume), mean(AMBA.Adjusted), mean(Low))
amba1%>% group_by(Month) %>% summarise(mean(AMBA.Volume), mean(AMBA.Adjusted), mean(AMBA.Low))
rm(ls=list()))
rm(ls=list())
list
list()
ls()
rm(ls())
rm(l=ls())
rm=ls()
del rm
rm rm
clear rm
rm()
rm(ls())
clear
install_from_swirl("Statistical Inference")
library(swirl)
install_from_swirl("Statistical Inference")
swirl()
asfas
33/36
deck
52
4/52
0
12/52
3/51
2/50
2/51
quit()
load(swirl)
library(swirl)
swirl()
1.6*0.8*0.5
80%
80
0.64/2
0.64/1
mypdf
integrate(mypdf, 0,1.6)
0.2
2
0.5
2
1
1.414
sqrt(2)
0.001*.997
1-0.000997
(1-0.997)*0.985
0.997*0.985
(1-0.985)*0.001
(1-0.985)*0.997
(1-0.985)*(1-0.997)
0.985*(0.001)
swirl()
library(swirl)
swirl()
0.5
info()
0.985+0.001
0.985+(1-0.997)
skip
skip()
0.001*0.995/(1-.985)*(1-.001)
.997*.001/(.997*.001+0.015*0.999)
4
PMF(21)
21/6
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
0.5*(edh+edl)
integrate(myfunc, 0, 2)
spop
mean(spop)
allsam
apply(allsam, mean)
apply(allsam, 1, mean)
smeans
mean(smeans)
library(swirl)
swirl()
dice_sqr
ex2_fair<-sum(dice_sqr, dice_fair)
ex2_fair<-sum(dice_sqr *dice_fair)
ex2_fair-3.5^2
sum(dice_sqr * dice_high) - edh^2
sd(apply(matrix(rnorM(10000),1000),1,mean))
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
sd(apply(matrix(runif(10000),1000),1,mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
pwd
pwd()
cwd
source('PA1_template.Rmd')
pwd
cwd
setwd("~/Data_Scientist/Reproducible_Research")
source('PA1_template.Rmd')
source('PA1_template.Rmd')
